%tree {
    position: absolute;
    max-width: 100%;
    max-height: 100%;
}
#main__img {
    grid-column-start: 3;

    /*
        We're flexing this container to keep the tree
        and all the other elements inside at the bottom.

        They vary in shape and size, so this is the most
        universal and shortest way to solve it.

        UPDATE:
        As of commit 315a741 we're also using flex to center heart.
        Having the tree images overlapping means we need a div with
        a position set to anything but static.

        We could play around with something like transform: translateY(-50%); top: 50%;
        but it would be clunky at best.
    */
    display: flex;
    align-items: flex-end;
    //
    position: relative;
    height: 100%;
    width: 100%;
}
.main__img--tree-branch {
    @extend %tree;
    z-index: 9;
}
.main__img--tree-leaves {
    @extend %tree;
    z-index: 10;
}
.main__img--tree-fall-leaves {
    @extend %tree;
    z-index: 9;
}
.main__img--tree-apples {
    z-index: 10;
    @extend %tree;
}

@media only screen and (max-width: $mobile__tablet-width) {
    #main__img {
        grid-area: tree;
        top: 1px;
    }
}